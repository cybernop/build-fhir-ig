name: Final Images

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    paths:
      - ".github/workflows/final-images.yml"
      - "**/Dockerfile.final"
      - "**/entrypoint*.sh"
      - "**/genonce.sh"
  workflow_run:
    workflows:
      - "Ubuntu Base Image"
      - "Ubuntu Base NodeJS Image"
    types:
      - completed
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  LATEST_PUB_VERSION: "1.8.8"
  LATEST_SUSHI_VERSION: "3.14.0"
  DEFAULT_OS: "ubuntu"
  DEFAULT_VERSION: "offline"
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build-image-without-sushi:
    name: Build images without Sushi
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ["online", "offline"]
        pub_version: ["1.8.8"]
        os: ["ubuntu"]
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.pub_version }}-${{ matrix.version }}-${{ matrix.os }}
            type=raw,value=${{ matrix.pub_version }}-${{ matrix.version }},enable=${{ matrix.os == env.DEFAULT_OS }}
            type=raw,value=${{ matrix.pub_version }},enable=${{ matrix.os == env.DEFAULT_OS && matrix.version == env.DEFAULT_VERSION }}
            type=raw,value=latest,enable=${{ matrix.os == env.DEFAULT_OS && matrix.version == env.DEFAULT_VERSION && matrix.pub_version == env.LATEST_PUB_VERSION}}
            type=raw,value=${{ matrix.pub_version }}-${{ matrix.os }},enable=${{ matrix.version == env.DEFAULT_VERSION }}
            type=raw,value=${{ matrix.version }}-${{ matrix.os }},enable=${{ matrix.pub_version == env.LATEST_PUB_VERSION }}
            type=raw,value=${{ matrix.os }},enable=${{ matrix.pub_version == env.LATEST_PUB_VERSION && matrix.version == env.DEFAULT_VERSION }}
            type=raw,value=${{ matrix.version }},enable=${{ matrix.pub_version == env.LATEST_PUB_VERSION && matrix.os == env.DEFAULT_OS }}

      # Build and push Docker image with Buildx (push on tag)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: docker
          file: "docker/Dockerfile.final"
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: ${{ matrix.version }}
          build-args: |
            OS_BASE=${{ matrix.os }}
            PUB_VERSION=${{ matrix.pub_version }}

  build-image-with-sushi:
    name: Build images with Sushi
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ["online", "offline"]
        pub_version: ["1.8.8"]
        os: ["ubuntu"]
        sushi_version:
          - "3.10.0"
          - "3.11.0"
          - "3.11.1"
          - "3.12.0"
          - "3.12.1"
          - "3.13.0"
          - "3.13.1"
          - "3.14.0"
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.pub_version }}-${{ matrix.version }}-sushi-${{ matrix.sushi_version }}-${{ matrix.os }}
            type=raw,value=${{ matrix.pub_version }}-${{ matrix.version }}-sushi-${{ matrix.os }},enable=${{ matrix.sushi_version == env.LATEST_SUSHI_VERSION}}
            type=raw,value=${{ matrix.pub_version }}-${{ matrix.version }}-sushi-${{ matrix.sushi_version }},enable=${{ matrix.os == env.DEFAULT_OS }}
            type=raw,value=${{ matrix.pub_version }}-${{ matrix.version }}-sushi,enable=${{ matrix.os == env.DEFAULT_OS && matrix.sushi_version == env.LATEST_SUSHI_VERSION }}
            type=raw,value=${{ matrix.pub_version }}-sushi-${{ matrix.sushi_version }},enable=${{ matrix.os == env.DEFAULT_OS && matrix.version == env.DEFAULT_VERSION }}
            type=raw,value=${{ matrix.pub_version }}-sushi,enable=${{ matrix.os == env.DEFAULT_OS && matrix.version == env.DEFAULT_VERSION && matrix.sushi_version == env.LATEST_SUSHI_VERSION }}
            type=raw,value=sushi-${{ matrix.sushi_version }},enable=${{ matrix.os == env.DEFAULT_OS && matrix.version == env.DEFAULT_VERSION && matrix.pub_version == env.LATEST_PUB_VERSION }}
            type=raw,value=sushi,enable=${{ matrix.os == env.DEFAULT_OS && matrix.version == env.DEFAULT_VERSION && matrix.pub_version == env.LATEST_PUB_VERSION  && matrix.sushi_version == env.LATEST_SUSHI_VERSION}}
            type=raw,value=${{ matrix.pub_version }}-${{ matrix.os }}-sushi-${{ matrix.sushi_version }},enable=${{ matrix.version == env.DEFAULT_VERSION }}
            type=raw,value=${{ matrix.pub_version }}-${{ matrix.os }}-sushi,enable=${{ matrix.version == env.DEFAULT_VERSION && matrix.sushi_version == env.LATEST_SUSHI_VERSION }}
            type=raw,value=${{ matrix.version }}-${{ matrix.os }}-sushi-${{ matrix.sushi_version }},enable=${{ matrix.pub_version == env.LATEST_PUB_VERSION }}
            type=raw,value=${{ matrix.version }}-${{ matrix.os }}-sushi,enable=${{ matrix.pub_version == env.LATEST_PUB_VERSION && matrix.sushi_version == env.LATEST_SUSHI_VERSION }}
            type=raw,value=${{ matrix.os }}-sushi-${{ matrix.sushi_version }},enable=${{ matrix.pub_version == env.LATEST_PUB_VERSION && matrix.version == env.DEFAULT_VERSION }}
            type=raw,value=${{ matrix.os }}-sushi,enable=${{ matrix.pub_version == env.LATEST_PUB_VERSION && matrix.version == env.DEFAULT_VERSION && matrix.sushi_version == env.LATEST_SUSHI_VERSION }}
            type=raw,value=${{ matrix.version }}-sushi-${{ matrix.sushi_version }},enable=${{ matrix.pub_version == env.LATEST_PUB_VERSION && matrix.os == env.DEFAULT_OS }}
            type=raw,value=${{ matrix.version }}-sushi,enable=${{ matrix.pub_version == env.LATEST_PUB_VERSION && matrix.os == env.DEFAULT_OS && matrix.sushi_version == env.LATEST_SUSHI_VERSION }}

      # Build and push Docker image with Buildx (push on tag)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: docker
          file: "docker/Dockerfile.final"
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: ${{ matrix.version }}-sushi
          build-args: |
            OS_BASE=${{ matrix.os }}
            PUB_VERSION=${{ matrix.pub_version }}
            SUSHI_VERSION=${{ matrix.sushi_version }}
