name: Docker Images

on:
  push:
    paths:
      - ".github/workflows/docker-flex-images.yaml"
      - "**/Dockerfile.flex-*"
      - "**/entrypoint*.sh"
      - "**/genonce.sh"
  workflow_dispatch:

env:
  CACHE_REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  LATEST_PUB_VERSION: "1.8.13"
  DEFAULT_OS: "ubuntu"
  DEFAULT_VERSION: "offline"
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  flex-images:
    name: Flex images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - "alpine"
          - "ubuntu"
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into github Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=flex,enable=${{ matrix.os == env.DEFAULT_OS }}
            type=raw,value=flex-${{ matrix.os }}

      # Build and push Docker image with Buildx (push on tag)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: docker
          file: docker/Dockerfile.flex-${{ matrix.os }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          cache-from: type=registry,ref=${{ env.CACHE_REGISTRY }}/${{ env.IMAGE_NAME }}:flex-${{ matrix.os }}-buildcache
          cache-to: type=registry,ref=${{ env.CACHE_REGISTRY }}/${{ env.IMAGE_NAME }}:flex-${{ matrix.os }}-buildcache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: flex

  flex-npm-images:
    name: Flex NPM images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - "alpine"
          - "ubuntu"
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into github Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=flex-npm,enable=${{ matrix.os == env.DEFAULT_OS }}
            type=raw,value=flex-npm-${{ matrix.os }}

      # Build and push Docker image with Buildx (push on tag)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: docker
          file: docker/Dockerfile.flex-${{ matrix.os }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          cache-from: type=registry,ref=${{ env.CACHE_REGISTRY }}/${{ env.IMAGE_NAME }}:flex-npm-${{ matrix.os }}-buildcache
          cache-to: type=registry,ref=${{ env.CACHE_REGISTRY }}/${{ env.IMAGE_NAME }}:flex-npm-${{ matrix.os }}-buildcache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: flex-npm
